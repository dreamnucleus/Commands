pool:
  vmImage: 'VS2017-Win2016'

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Install NBGV tool'
  inputs:
    command: custom
    custom: tool
    arguments: 'install --tool-path . nbgv'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: 'nbgv cloud' 
  displayName: 'Set Version'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '-c $(BuildConfiguration) --collect:"Code Coverage" -s $(System.DefaultWorkingDirectory)/CodeCoverage.runsettings /p:DebugType=Full'

- task: mspremier.BuildQualityChecks.QualityChecks-task.BuildQualityChecks@5
  displayName: 'Build Quality'
  inputs:
    checkWarnings: true
    warningFailOption: fixed
    warningThreshold: 0
    checkCoverage: true
    coverageFailOption: fixed
    coverageThreshold: 80
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: alanwales.resharper-code-analysis.custom-build-task.ResharperCli@1
  displayName: 'ReSharper Code Quality'
  inputs:
    SolutionOrProjectPath: Commands.sln
    FailBuildOnCodeIssues: true
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: pack
    packagesToPack: 'DreamNucleus.Commands/DreamNucleus.Commands.csproj;DreamNucleus.Commands.Autofac/DreamNucleus.Commands.Autofac.csproj;DreamNucleus.Commands.Extensions/DreamNucleus.Commands.Extensions.csproj;DreamNucleus.Commands.Extensions.Azure/DreamNucleus.Commands.Extensions.Azure.csproj'
    nobuild: true
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    ArtifactName: Drop
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
