trigger:
  branches:
    include:
      - master
      - develop


queue:
  name: Hosted VS2017


variables: 
  BuildConfiguration: Release


steps:
- task: DotNetCoreCLI@2
  displayName: 'Install NBGV tool'
  inputs:
    command: custom
    custom: tool
    arguments: 'install --tool-path . nbgv'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: 'nbgv cloud' 
  displayName: 'Set Version'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
  enabled: false

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.cobertura.xml'
    failIfCoverageEmpty: true
  enabled: false

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '-c $(BuildConfiguration) --collect:"Code Coverage" -s $(System.DefaultWorkingDirectory)/CodeCoverage.runsettings /p:DebugType=Full'

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: pack
    packagesToPack: 'Slipstream.CommonDotNet.Commands/Slipstream.CommonDotNet.Commands.csproj;Slipstream.CommonDotNet.Commands.Autofac/Slipstream.CommonDotNet.Commands.Autofac.csproj;Slipstream.CommonDotNet.Commands.Results/Slipstream.CommonDotNet.Commands.Results.csproj;Slipstream.CommonDotNet.Commands.Extensions/Slipstream.CommonDotNet.Commands.Extensions.csproj;Slipstream.CommonDotNet.Commands.Extensions.Azure/Slipstream.CommonDotNet.Commands.Extensions.Azure.csproj'
    nobuild: true
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    ArtifactName: Drop
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
